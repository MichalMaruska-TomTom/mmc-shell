#!/bin/zsh -feu

# how to use: cd ~/repo; $0

# does NOT fetch.
# show diverged:
# show retarded, or advanced.

# + other actions (on remotes).
source /usr/share/mmc-shell/git-functions.sh

set_remote_name
remote=$GIT_REMOTE_NAME

branch="master"

# check git if still using this, then drop it:
obsolete_remote=mdell

git_remote_known()
{
    git remote show $1 &>/dev/null
}

git_remote_branch_known()
{
    local remote=$1
    local branch=$2
    git branch --remote|grep "$remote/$branch" >/dev/null
}


foreach d (**/.git) {
    dir=${d%.git};
    if [ "$dir" = "" ]; then dir=.;fi
    cd $dir;

    # Remove this remote:
    if git_remote_known $obsolete_remote; then
        set -x
        git remote rm $remote;
        set +x
    fi

    if ! git_remote_known $remote; then
        cecho cyan "no remote '$remote' in $dir"
        # fixme: this needs the new version which alre fetches...
        git-add-remote-mdell
    elif ! git_remote_branch_known $remote $branch ; then
        git fetch $remote
        cecho hiblue "the remote does not contain branch $branch of $dir"
        #try:
    elif ! git_ref_exists "heads/$branch"; then
        git branch $branch "$remote/$branch"
    else
        compare=$(git-compare-remotes -q $branch $remote)
        if [ $compare = "diverged" ];
        then
            cecho red $dir;
        else
            cecho yellow "$dir $compare"
        fi;
    fi
    cd -
}
