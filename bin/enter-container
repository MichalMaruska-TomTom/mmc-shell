#!/bin/zsh -feu

# Enter a container with 32-bit environment.
# - bind-mount my Source repositories to be able to build.
# -

# typeset
CONTAINER_DIR=
distro=sid
arch=i386
VERBOSE=n
as_root=n
arguments=(--private-users=no)
# todo:  --root


bind_mounts=(
)

readonly build_bind_mounts=(
    # ash gpg
    /home/michal/.gnupg
    )
readonly user_bind_mounts=(
    $HOME
    /dev/
)

if getopt -T; then # should test (( $? = -4 ))
    echo "incompatible  getopt(1) installed. Abort"
    exit -1
fi

usage()
{
cat <<EOF
usage: ${0##*/} [+-n] [-c dir] [-b dir] [--] ARGS...

-n  ... setup private network (no networking at start?)
-b  .. add directory as --bind mount.
-r  ... start as root
-c  ... chdir at start
EOF
}

cmd_options=$(getopt --name $0 --shell bash \
                     --longoptions private-network,machine:,arch:,distro:,bind:,chdir:,root,usage,help,interactive,verbose \
                     --options :nrb:c:m:a:d:iv \
                     -- "$@" ) || { usage; exit 1 }
eval set -- "$cmd_options"

while (( $# > 0 )) do
      case $1 in
          n| private-network)
              arguments+=(--private-network)
              ;;
          -d | --distro)
              shift
              arch=$1
              ;;
          -i | --interactive)
              bind_mounts+=($user_bind_mounts)
              ;;
          -v | --verbose)
              VERBOSE=y
              ;;
          -a | --arch)
              shift
              arch=$1
              ;;
          m | --machine)
              shift
              CONTAINER_DIR="$1"
              ;;
          -b | --bind )
              shift
              bind_mounts+=("$1")
              ;;
          -r | --root )
              # as root!
              as_root=y
              ;;
          -c | --chdir )
              shift
              arguments+=(--chdir "$1")
              ;;
          h | usage | help)
              usage
              exit 0
              ;;
          -- )
              shift
              break
              ;;
          *)
              echo "unknown option $1">&2
              usage >&2
              exit 2
      esac
      shift
done


if [ -z $CONTAINER_DIR ]; then
    CONTAINER_DIR=/var/lib/machines/$distro-$arch
fi

if [ $as_root = n ]
then
    arguments+=(--user michal)
fi


for ((i=1; i<= ${#bind_mounts}; i++))
    {bind_mounts[$i]="--bind=$bind_mounts[$i]" }

echo $bind_mounts

if [[ $# = 0 ]]; then
    arguments+=(/usr/bin/setsid -c -w /bin/zsh -l)
fi

if [ $VERBOSE = y ]; then  set -x;fi
exec sudo systemd-nspawn \
     --directory $CONTAINER_DIR \
     $bind_mounts \
     $arguments $@
