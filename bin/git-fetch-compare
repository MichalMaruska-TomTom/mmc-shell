#! /bin/zsh -feu

## keep the local git repo up-to-date & report situation.
## i.e. compare (local branch) head with a remote head.

## `Defaults'
branch=HEAD
push=yes
remote=
# all


# remotes=$(git remote)
# if [ ${#remotes} = 1 ]; then
#     remote=${remotes[1]}
# fi


hash_of()
{
    git log $1 --max-count=1 --format="%H"
}

usage()
{
    cat <<EOF
usage: ${0##*/} [+-f] [-r <remote>| -a]  [--] ARGS...
-P | --pushto {remote}
-r | --remote [remote]   ....
-a | --all
EOF
}

push=no

# how can I have optional argument to ... ?
cmd_options=$(getopt --name $0 --shell bash \
	--longoptions push,pushto:,remote --options r:pP:h \
	-- "$@" ) || { usage && exit 1 }

eval set -- "$cmd_options"

while (( $# > 0 )); do
    case $1 in
	-p | --push )
	    push=yes
	    ;;
	-P | --pushto)
	    shift
	    push=$1
	    ;;
	-h | --help)
	    usage
	    exit 0
	    ;;
	--all | -a)
	    remote="--all"
	    ;;
	-r | --remote)
	    shift
	    remote=$1
	    ;;
    esac
    shift
done



# remote or --all
# git fetch $remote

if [ -z ${remote} ];
then
    git fetch "--all" --quiet
    git status --short
else
    typeset -a remotes
    remotes=($(git remote))
    #echo $remotes vs $remote
    #echo ${remote:|remotes}
    if [ -z "${remote:|remotes}" ]; then
	cecho cyan "$(pwd)"
	# set -x
	git fetch ${remote} --quiet
	~/repo/mmc-shell/bin/git-compare-remotes master $remote
    fi
fi
# git log --oneline  ORIG_HEAD..HEAD --


# if [ ! $push = no -a $cmp = 1 ];
# then
#     # if maruska -> --mirror

#     # push   .. as configured
#     # push : .. corresponding
#     #
#     cecho yellow  "git push master"
# #    echo git push $remote master
# fi

