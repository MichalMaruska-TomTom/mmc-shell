#! /bin/zsh -feu

## compare (local branch) head  with a remote head.


## `Defaults'
branch=HEAD
remote=maruska
push=yes


hash_of()
{
    git log $1 --max-count=1 --format="%H"
}

# return 1 if A < B
# 0 if  A=B
# -1
# 2 incomparable?
compare_commits()
{
    local first=$(git log $1 --max-count=1 --format="%H")
    local second=$(git log $2 --max-count=1 --format="%H")
    if [ -z "$first" -o -z "$second" ]; then
	return 2
    fi
    if [ $first = $second ]; then
	return 0;
    fi

    common=$(git merge-base $1 $2)
    if [ $common = $second ]; then
	return 1;
    elif [ $common = $first ]; then
	return -1;
    else
	return 2
    fi
}

usage()
{
    cat <<EOF
usage: ${0##*/} [+-f] [-r <remote>| -a]  [--] ARGS...
EOF
}

push=no

set -x
# how can I have optional argument to ... ?
while getopts :hpP:r:a OPT; do
    case $OPT in
	p|+p)
	    push=yes
	    ;;
	P)
	    push=$OPTARG
	    ;;
	h)
	    usage
	    exit
	    ;;
	a)
	    remote="--all"
	    ;;
	r)
	    remote=$OPTARG
	    ;;
	?)
	    if [ $OPTARG = "p" ];then
		push=$remote
		exit
	    fi
	    ;;
	*)
	    print "usage: ${0##*/} [+-f] [--] ARGS..."
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1
set +x


# remote or --all
git fetch --all
# git fetch $remote
git log --oneline HEAD..FETCH_HEAD


set +e
compare_commits $branch remotes/$remote/master;
cmp=$?
set -e

echo $cmp

if [ ! $push = no -a $cmp = 1 ];
then
    # if maruska -> --mirror

    # push   .. as configured
    # push : .. corresponding
    #
    cecho yellow  "git push master"
#    echo git push $remote master
fi


exit 0
