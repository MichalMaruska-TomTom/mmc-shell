#! /bin/zsh -feu

## keep the local git repo up-to-date & report situation.
## i.e. compare (local branch) head with a remote head.

## `Defaults'
branch=HEAD
remote=maruska
push=yes


hash_of()
{
    git log $1 --max-count=1 --format="%H"
}

# return 1 if A < B
# 0 if  A=B
# -1
# 2 incomparable?
compare_commits()
{
    local first=$(git log $1 --max-count=1 --format="%H")
    local second=$(git log $2 --max-count=1 --format="%H")
    if [ -z "$first" -o -z "$second" ]; then
	return 2
    fi
    if [ $first = $second ]; then
	return 0;
    fi

    common=$(git merge-base $1 $2)
    if [ $common = $second ]; then
	return 1;
    elif [ $common = $first ]; then
	return -1;
    else
	return 2
    fi
}

usage()
{
    cat <<EOF
usage: ${0##*/} [+-f] [-r <remote>| -a]  [--] ARGS...
-P | --pushto {remote}
-r | --remote [remote]   ....
-a | --all
EOF
}

push=no

# how can I have optional argument to ... ?
cmd_options=$(getopt --name $0 --shell bash \
	--longoptions push,pushto:,remote --options r:pP:h \
	-- "$@" ) || { usage && exit 1 }

eval set -- "$cmd_options"

while (( $# > 0 )); do
    case $1 in
	-p | --push )
	    push=yes
	    ;;
	-P | --pushto)
	    shift
	    push=$1
	    ;;
	-h | --help)
	    usage
	    exit 0
	    ;;
	--all | -a)
	    remote="--all"
	    ;;
	-r | --remote)
	    shift
	    remote=$1
	    ;;
    esac
    shift
done


# remote or --all
git fetch --all --quiet
# git fetch $remote
git status --short

set +e
compare_commits $branch remotes/$remote/master;
cmp=$?
set -e

case $cmp in
    1)
	echo "local is ahead"
	git log --oneline $remote/master..HEAD --
	;;
    0)
	echo " =="
	;;
    -1)
	echo "local is behind"
	git log --oneline HEAD..FETCH_HEAD --
	;;
    2)
	echo "error in comparing $branch & FETCHMAIL"
	;;
    *)
	echo $cmp
esac

if [ ! $push = no -a $cmp = 1 ];
then
    # if maruska -> --mirror

    # push   .. as configured
    # push : .. corresponding
    #
    cecho yellow  "git push master"
#    echo git push $remote master
fi


exit 0
