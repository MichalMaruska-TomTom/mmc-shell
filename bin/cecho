#! /bin/bash -e

COLOR=$1
shift


# As requested, let's support Bash 3 (a shell without associative arrays)
if [ x$BASH_VERSINFO != x \
	-a $BASH_VERSINFO -lt 4 ]
then
    hash_support=0
else
    hash_support=1
fi


if [ $hash_support = 1 ]
then
declare -A _COLORS
_COLORS[black]='\E[30;47m'
_COLORS[red]='\E[31;47m'
_COLORS[green]='\E[32;47m'
_COLORS[yellow]='\E[33;47m'
_COLORS[hiyellow]='\033[1;32m'
_COLORS[blue]='\E[34;47m'
_COLORS[hiblue]='\033[1;34m'
#hiblue=$blue
_COLORS[magenta]='\E[35;47m'
_COLORS[cyan]='\E[36;47m'
_COLORS[white]='\E[37;47m'
_COLORS[bold]='\033[1m'
else
   declare -a _COLORS
   _COLORS=(
"black:\E[30;47m"
"red:\E[31;47m"
"green:\E[32;47m"
"yellow:\E[33;47m"
"hiyellow:\033[1;32m"
"blue:\E[34;47m"
"hiblue:\033[1;34m"
#hiblue=$blue
"magenta:\E[35;47m"
"cyan:\E[36;47m"
"white:\E[37;47m"
"bold:\033[1m"
   );
fi

emit_color()
{
if [ $hash_support = 1 ]
then
    echo -n -e "${_COLORS[$COLOR]}"
else
    for info in ${_COLORS[@]} ; do
	KEY=${info%%:*}
	VALUE=${info##*:}
	if [ $KEY = $1 ]
	    then
	    echo -n -e "$VALUE"
	fi
    done
fi
}



if [ -t 0 -o -S /dev/stdin ]; then
    if [ "${TERM}" = "xterm" \
	-o "${TERM}" = "screen" \
	-o "${TERM}" = "rxvt" \
	-o "${TERM}" = "ansi" ]; then
	emit_color $COLOR
	echo -n $@
	tput sgr0
	echo
    else
	echo $@
    fi
else
    echo $@
fi
