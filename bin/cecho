#! /bin/bash -e

COLOR=$1
shift


# As requested, let's support Bash 3 (a shell without associative arrays)
if [ x$BASH_VERSINFO != x \
	-a $BASH_VERSINFO -lt 4 ]
then
    hash_support=0
else
    hash_support=1
fi


if [ $hash_support = 1 ]
then
declare -A _COLORS
_COLORS[reset]='\E[00m'
_COLORS[black]='\E[30m'
_COLORS[red]='\E[31m'
_COLORS[yellow]='\E[32m'
_COLORS[green]='\E[33m'
_COLORS[hired]='\033[31;1m'
_COLORS[hiyellow]='\033[1;32m'
_COLORS[higreen]='\033[1;33m'
_COLORS[blue]='\E[34m'
_COLORS[hiblue]='\033[1;34m'
#hiblue=$blue
_COLORS[magenta]='\E[35m'
_COLORS[cyan]='\E[36m'
_COLORS[white]='\E[37m'
_COLORS[bold]='\033[1m'

_COLORS[orange]='\x1b[48;5;209m'
# 209
else
   declare -a _COLORS
   _COLORS=(
"reset:\E[00m"
"black:\E[30;47m"
"red:\E[31;47m"
"green:\E[32;47m"
"yellow:\E[33;47m"
"hired:\033[31;1m"
"hiyellow:\033[1;32m"
"higreen:\033[1;33m"
"blue:\E[34;47m"
"hiblue:\033[1;34m"
#hiblue=$blue
"magenta:\E[35;47m"
"cyan:\E[36;47m"
"white:\E[37;47m"
"bold:\033[1m"
   );
fi

emit_color()
{
if [ $hash_support = 1 ]
then
    echo -n -e "${_COLORS[$COLOR]}"
else
    for info in ${_COLORS[@]} ; do
	KEY=${info%%:*}
	VALUE=${info##*:}
	if [ $KEY = $1 ]
	    then
	    echo -n -e "$VALUE"
	fi
    done
fi
}



if [ -t 1 -o "${FORCE_COLOR-}" = y -o -S /dev/stdout ]; then
    if [ "${TERM}" = "xterm" \
	-o "${TERM}" = "screen" \
	-o "${TERM}" = "rxvt" \
	-o "${TERM}" = "ansi" ]; then
	emit_color $COLOR
	echo "$@"
	tput sgr0
	# echo
    else
	echo "$@"
    fi
else
    echo "$@"
fi
