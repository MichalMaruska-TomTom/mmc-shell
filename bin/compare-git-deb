#! /bin/zsh -feu

# Compare Git repository which carries a source debian package
# with what is released as a debian package.

# fixme: must be invoked inside DIR.
DIR=$1
last_release_tag=$(git describe --tags HEAD 2>/dev/null)



# binary package, somehow representing the source package in that Git repo:
# todo:

deb_src_pkg=$(deb-pkg-name debian/control*)
name=$deb_src_pkg


deb_pkg=$(deb-pkg-binary-packages .)
info=$(deb-pkg-installed-version $deb_pkg |tail -n 1)
version=$info
#(echo $info)

# path from $FOR_EACH_BASE_DIR

if [ 0 = $? ]; then
    set +e
    post=$(expr match $last_release_tag '^.*-\([[:digit:]]\+\)-[[:alnum:]]\+$')
    match_status=$?

    gitversion=${${last_release_tag#*/}%%-*}

    set -e
    if [ $match_status = 0 ];
    then
	#echo -n "$post "
	tag=$(expr match $last_release_tag '^\(.*\)-[[:digit:]]\+-[[:alnum:]]\+$')
	cecho yellow -n $name
	echo -n -e '\tis '
	cecho cyan -n $post
	echo " commits ahead of\t $tag"

	if [ "$gitversion" != "$version" ]; then
	    cecho blue -e "\tdifferent versions: $gitversion vs $version"
	fi


	git --no-pager log --format='%C(green)%h %C(blue)%s' $tag..HEAD
	# git log --oneline $tag..HEAD
	echo
    else
	if [ "$gitversion" != "$version" ]; then
	    cecho red -e $name  '\t' $last_release_tag  '\t installed:' $version
	else
	    echo -e $name  '\t' $last_release_tag
	    #   '\t installed:' $version
	fi
    fi
fi
