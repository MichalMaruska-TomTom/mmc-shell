#! /bin/zsh -feu

# Dump the git history since the release which is `available'

#  o  Git repository which carries a source debian package
# with
#  o  available debian package version.
#   grep-status   -F package   --regex '^make$'

readonly VALID_RELEASE_TAG_NUMBER='^.*-\([[:digit:]]\+\)-[[:alnum:]]\+$'
#                                    vvvv ^^^^^^^^^^^^^
readonly VALID_RELEASE_TAG_PREFIX='^\(.*\)-[[:digit:]]\+-[[:alnum:]]\+$'
# 1568-rc56
#     ^ must be there

usage()
{
    setopt POSIX_ARGZERO
    cat <<EOF
usage: ${0##*/} [+-h] [--] [dir]

dir ... by default "."

EOF
    # enters dir and compares its debian/changelog with what is installed (dpkg -l)
}

# fixme: must be invoked inside DIR.
while getopts :h OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# -gt 0 ]; then
    DIR=$1
else
    DIR=.
fi

readonly last_release_tag=$(cd $DIR; git describe --tags HEAD 2>/dev/null)


# binary package, somehow representing the source package in that Git repo:
# todo:
readonly deb_src_pkg=$(deb-pkg-name $DIR/debian/control*)

# is this an array?
readonly deb_pkg=$(deb-pkg-binary-packages $DIR)

readonly info=$(deb-pkg-installed-version $deb_pkg |tail -n 1)
readonly version=$info
#(echo $info)

# path from $FOR_EACH_BASE_DIR
if [ 0 = $? ]; # fixme!
then
    set +e

    readonly number=$(expr match $last_release_tag $VALID_RELEASE_TAG_NUMBER)
    match_status=$?

    readonly gitversion=${${last_release_tag#*/}%%-*}

    set -e
    if [ $match_status = 0 ];
    then
        #echo -n "$number"
        tag=$(expr match $last_release_tag $VALID_RELEASE_TAG_PREFIX)
        cecho hiyellow -n $deb_src_pkg

        echo -n -e '\tis '
        cecho cyan -n $number
        echo " commits ahead of\t $tag"

        if [ "$gitversion" != "$version" ]; then
            cecho blue -e "\tdifferent versions: $gitversion vs $version"
        fi


        git --no-pager log --format='%C(green)%h %C(blue)%s' $tag..HEAD
        # git log --oneline $tag..HEAD
        echo
    else
        if [ "$gitversion" != "$version" ]; then
            cecho red -e $deb_src_pkg  '\t' $last_release_tag  '\t installed:' $version
        else
            cecho reset -e $deb_src_pkg  '\t' $last_release_tag
            #   '\t installed:' $version
        fi
    fi
fi
