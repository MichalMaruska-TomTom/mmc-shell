#!/bin/zsh -feu

# Pure pulse-audio switching between sinks.
# No alsa access.

source /usr/share/mmc-shell/mmc-functions.sh
colors

sink_number()
{
    pactl list short sinks|grep -e $1 | cut -f 1
}

usage()
{
    cat <<EOF
usage: ${0##*/} [+-pbsh] [-i name] [-l]
-b builtin

-p  phones
-s  speakers
-u  USB phones

-i [name] custom sink? ( pactl list short sinks)

-l list sinks
EOF
}


move_to()
{
    local sink=$1
    # sink_input=$(pactl list short sink-inputs|cut -f 1)
    pactl set-default-sink $sink

    pactl list short sink-inputs|cut -f 1 |
        while read si
        do
            pactl move-sink-input $si $sink
        done
}

activate_profile()
{
    local CARD=$1
    local PROFILE=$2
    pactl set-card-profile $CARD $PROFILE
}
WD15_DOCK=n

WD15_SINK_REGEXP='USB.*Dock_0'
# WD15_SINK_REGEXP='USB.*Dock_1'
WD15_SINK_REGEXP='Generic_USB_Audio_200901010001'

wd15card="alsa_card.usb-Generic_USB_Audio_200901010001-00"
usb_phones='alsa_output.usb-Plantronics_Plantronics_C320-M_DC07CFE9246B394C99F2ECEDA32A7A3F-00.analog-stereo'

while getopts :bhi:lpsu OPT; do
    case $OPT in
        p|+p)
            if [[ $WD15_DOCK = y ]]; then
                activate_profile $wd15card \
                                 "output:analog-stereo-headphone+input:analog-stereo-mic"
                headphones=$(traced_exec sink_number $WD15_SINK_REGEXP)
                move_to $headphones
            else
                sink="alsa_output.pci-0000_00_1b.0.analog-stereo"
                pactl set-sink-port $sink analog-output-headphones
                move_to $sink
                audio-select -p
            fi
            ;;
        b|+b)
            sink="alsa_output.pci-0000_00_1b.0.analog-stereo"
            builtin=$(traced_exec sink_number $sink
                      #"alsa_output.pci-0000_00_1f.3.analog-stereo"
                   )
            pactl set-sink-port $sink analog-output-speaker
            audio-select -b
            move_to $sink
            ;;
        s|+s)
            if [[ $WD15_DOCK = y ]]
            then
                activate_profile $wd15card "output:analog-stereo-speaker"
                speakers=$(traced_exec sink_number $WD15_SINK_REGEXP)
                move_to $speakers
            else
                audio-select -j
                # e-dock
                # profile pactl set-card-profile
                # alsa_card.pci-0000_00_1b.0 output:analog-stereo+input:analog-stereo
                sink="alsa_output.pci-0000_00_1b.0.analog-stereo"
                pactl set-sink-port $sink analog-output-lineout
                move_to $sink
            fi
            ;;
        u) # usb headphones
            move_to $usb_phones
            ;;
        h|+h)
            usage
            exit 0
            ;;
        i)
            move_to $OPTARG
            ;;
        l)
            LOG_STEP "sinks-inputs"
            pactl list short sink-inputs
            LOG_STEP "sinks:"
            pactl list short sinks
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1


erase_configuration_file()
{
    local tdb_file=$1

    drop=(sink-input-by-application-name:MPlayer
          sink-input-by-application-name:mpg123
          sink-input-by-application-name:gthumb
          'sink-input-by-application-name:libao[ogg123]'
         )

    foreach key ($drop) {
        if false; then
            tdbtool $tdb_file delete "$key"
        fi
    }
}


erase_configuration_file  ~/.config/pulse/*-stream-volumes.tdb
