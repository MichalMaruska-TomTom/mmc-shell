#!/bin/zsh -feu

source /usr/share/mmc-shell/git-functions.sh
source /usr/share/mmc-shell/mmc-functions.sh
colors

# set -x
usage() {
    setopt POSIX_ARGZERO
    cat <<EOF
usage: ${0##*/} [+-h] [-f] [--]  [remote] [branch]

Fast-forward to remote head, stashing around.
-f not only fast-forward !

By default {branch} is the current one.
EOF
    unsetopt POSIX_ARGZERO
}

set_remote_name
# todo: the same I'm on
branch=$(current_branch_name)
force=n

while getopts :hf OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        f)
            force=y
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# -gt 0 ]; then
    GIT_REMOTE_NAME=$1
    shift
fi

if [ $# -gt 0 ]; then
    branch=$1
    shift
fi


# if the fast-forward would move ahead!

readonly REMOTE_HEAD=$GIT_REMOTE_NAME/$branch
if [[ $(git rev-parse HEAD) != $(git rev-parse $REMOTE_HEAD) ]]; then

    if [[ $force = y  || $(git rev-parse HEAD) = $(git merge-base HEAD $REMOTE_HEAD) ]]
    then
        stash_if_non_clean "merge fast-forward"

        if [[ $force = y ]];
        then
            git reset --hard remotes/$GIT_REMOTE_NAME/$branch
        else
            # git checkout $branch
            git merge --ff-only $REMOTE_HEAD
        fi
        unstash_if_stashed
    else
        echo >&2 cannot fast-forward to $REMOTE_HEAD: $fg[red]not our descendant$reset_color
    fi
fi
